#version 1

set build-property Configuration Release
set execute-configuration Release

if host Windows
  set target-platforms Windows,WindowsGL,Linux,Windows8
endif
if host MacOS
  set target-platforms Linux,MacOS,iOS,Android
endif
if host Linux
  set target-platforms WindowsGL,Linux
endif

generate

if host Windows
  nuget restore MonoGame.Framework\MonoGame.Framework.WindowsUniversal.project.json -NonInteractive
  nuget restore MonoGame.Framework\MonoGame.Framework.Net.WindowsUniversal.project.json -NonInteractive
endif

set build-target Clean
build

set build-target Build
build

# Make sure we only push host packages from the host platform.
if host Windows
  set target-platforms Windows,WindowsGL,Windows8
endif
if host MacOS
  set target-platforms MacOS,iOS,Android,Ouya
endif
if host Linux
  set target-platforms Linux
endif

set package-format nuget/zip

pack . MonoGame.Redpoint.$TARGET_PLATFORM.nupkg $TARGET_PLATFORM

if host Windows
  if file-exists C:\Users\build\Documents\nuget_api_key.txt
    push C:\Users\build\Documents\nuget_api_key.txt MonoGame.Redpoint.$TARGET_PLATFORM.nupkg https://www.nuget.org/api/v2/package --ignore-on-existing
  endif
endif
if host MacOS
  if file-exists /Users/june/nuget_api_key.txt
    push /Users/june/nuget_api_key.txt MonoGame.Redpoint.$TARGET_PLATFORM.nupkg https://www.nuget.org/api/v2/package --ignore-on-existing
  endif
endif
if host Linux
  if file-exists /srv/nuget_api_key.txt
    push /srv/nuget_api_key.txt MonoGame.Redpoint.$TARGET_PLATFORM.nupkg https://www.nuget.org/api/v2/package --ignore-on-existing
  endif
endif